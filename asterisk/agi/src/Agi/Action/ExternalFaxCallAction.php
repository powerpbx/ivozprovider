<?php

namespace Agi\Action;

use Agi\ChannelInfo;
use Agi\Wrapper;
use Doctrine\ORM\EntityManagerInterface;
use Ivoz\Core\Application\Service\EntityTools;
use Ivoz\Provider\Domain\Model\Fax\FaxInterface;
use Ivoz\Provider\Domain\Model\FaxesInOut\FaxesInOutDTO;
use Ivoz\Provider\Domain\Model\FaxesInOut\FaxesInOutInterface;

/**
 * @class ExternalFaxCallAction
 *
 * @brief Manage outgoing external calls generated by faxes
 *
 */
class ExternalFaxCallAction extends ExternalCallAction
{
    /**
     * @var EntityTools
     */
    protected  $entityTools;

    /**
     * @var string
     */
    protected $number;

    /**
     * @var FaxesInOutInterface
     */
    protected $faxfile;

    /**
     * ExternalFaxCallAction constructor.
     * @param Wrapper $agi
     * @param ChannelInfo $channelInfo
     * @param EntityManagerInterface $em
     * @param EntityTools $entityTools
     */
    public function __construct(
        Wrapper $agi,
        ChannelInfo $channelInfo,
        EntityManagerInterface $em,
        EntityTools $entityTools
    )
    {
        $this->entityTools = $entityTools;

        parent::__construct($agi, $channelInfo, $em);
    }

    /**
     * @param FaxesInOutInterface|null $faxfile
     * @return $this
     */
    public function setFaxfile(FaxesInOutInterface $faxfile = null)
    {
        $this->faxfile = $faxfile;
        return $this;
    }

    /**
     * @param string|null $number
     * @return $this
     */
    public function setDestination(string $number = null)
    {
        $this->number = $number;
        return $this;
    }

    public function process()
    {
        /** @var FaxInterface $fax */
        $fax = $this->channelInfo->getChannelCaller();
        $faxOut = $this->faxfile;
        $number = $this->number;

        // Some feedback for asterisk cli
        $this->agi->notice("Processing External call from fax <green>%s</green> to %s", $fax, $number);

        // Get Ougoing presentation
        $ddi = $fax->getOutgoingDDI();

        // We need Outgoing DDI for external call presentation
        if (!$ddi) {
            $this->agi->error("Fax %s has not OutgoingDDI configured", $fax);
            $this->agi->decline();


            /** @var FaxesInOutDTO $faxOutDto */
            $faxOutDto = $this->entityTools->entityToDto($faxOut);
            $faxOutDto->setStatus('error');
            $this->entityTools->persistDto($faxOutDto, $faxOut);

            return;
        }

        // Set Caller name
        $this->agi->setCallerIDNum($ddi->getDdie164());

        // Call the PSJIP endpoint
        $this->agi->setVariable("__DIAL_DST", "PJSIP/" . $number . '@proxytrunks');
        $this->agi->setVariable("__DIAL_OPTS", "");

        $this->agi->redirect('faxes-call-world', $number);
    }
}
