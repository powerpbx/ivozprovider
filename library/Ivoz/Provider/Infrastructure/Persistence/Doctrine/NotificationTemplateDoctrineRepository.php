<?php

namespace Ivoz\Provider\Infrastructure\Persistence\Doctrine;

use Doctrine\Bundle\DoctrineBundle\Repository\ServiceEntityRepository;
use Ivoz\Provider\Domain\Model\BalanceNotification\BalanceNotificationInterface;
use Ivoz\Provider\Domain\Model\NotificationTemplate\NotificationTemplateRepository;
use Ivoz\Provider\Domain\Model\NotificationTemplate\NotificationTemplate;
use Ivoz\Provider\Domain\Model\NotificationTemplate\NotificationTemplateInterface;
use Symfony\Bridge\Doctrine\RegistryInterface;

/**
 * NotificationTemplateDoctrineRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class NotificationTemplateDoctrineRepository extends ServiceEntityRepository implements NotificationTemplateRepository
{
    public function __construct(RegistryInterface $registry)
    {
        parent::__construct($registry, NotificationTemplate::class);
    }

    /**
     * @return null | NotificationTemplateInterface
     */
    public function findGenericCallCsvTemplate()
    {
        /** @var NotificationTemplateInterface $response */
        $response = $this->findOneBy([
            'brand' => null,
            'type' => 'callCsv'
        ]);

        return $response;
    }

    /**
     * @return null | NotificationTemplateInterface
     */
    public function findGenericInvoiceTemplate()
    {
        /** @var NotificationTemplateInterface $response */
        $response = $this->findOneBy([
            'brand' => null,
            'type' => 'invoice'
        ]);

        return $response;
    }

    /**
     * @return null | NotificationTemplateInterface
     */
    public function findGenericFaxTemplate()
    {
        /** @var NotificationTemplateInterface $response */
        $response = $this->findOneBy([
            'brand' => null,
            'type' => 'fax'
        ]);

        return $response;
    }

    /**
     * @return null | NotificationTemplateInterface
     */
    public function findGenericVoicemailTemplate()
    {
        /** @var NotificationTemplateInterface $response */
        $response = $this->findOneBy([
            'brand' => null,
            'type' => 'voicemail'
        ]);

        return $response;
    }

    /**
     * @inheritdoc
     * @see NotificationTemplateRepository::findTemplateByBalanceNotification
     */
    public function findTemplateByBalanceNotification(BalanceNotificationInterface $balanceNotification)
    {
        $notificationTemplate = $balanceNotification->getNotificationTemplate();
        if ($notificationTemplate) {
            return $notificationTemplate;
        }

        return $this->findOneBy([
            'brand' => null,
            'type' => 'lowbalance'
        ]);
    }
}
