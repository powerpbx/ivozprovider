########################################
## Raw
########################################
Ivoz\Provider\Domain\Model\Administrator\Administrator:
  attributes:
    access_control: '"ROLE_BRAND_ADMIN" in roles'
    read_access_control:
      ROLE_BRAND_ADMIN:
        id:
          neq: 0
        or:
          - company:
              in: "companyRepository.getSupervisedCompanyIdsByAdmin(user)"
          - company:
              isNull: ~
        brand:
          eq: "user.getBrand().getId()"
    write_access_control:
      ROLE_BRAND_ADMIN:
        raw: "id > 0 or id === null"
        or:
          - company:
              in: "companyRepository.getSupervisedCompanyIdsByAdmin(user)"
          - company:
              isNull: ~
        brand:
          eq: "user.getBrand().getId()"
Ivoz\Provider\Domain\Model\BillableCall\BillableCall:
  itemOperations:
    get: ~
  collectionOperations:
    get:
      swagger_context:
        produces:
          - 'application/json'
          - 'application/ld+json'
          - 'text/csv'
  attributes:
    pagination_client_enabled: true
    access_control: '"ROLE_BRAND_ADMIN" in roles'
    read_access_control:
      ROLE_BRAND_ADMIN:
        brand:
          eq: "user.getBrand().getId()"
Ivoz\Provider\Domain\Model\Brand\Brand:
  collectionOperations: []
  attributes:
    access_control: '"ROLE_BRAND_ADMIN" in roles'
    read_access_control:
      ROLE_BRAND_ADMIN:
        id:
          eq: "user.getBrand().getId()"
Ivoz\Provider\Domain\Model\Brand\Invoice:
Ivoz\Provider\Domain\Model\Brand\Logo:
Ivoz\Provider\Domain\Model\BalanceNotification\BalanceNotification:
  attributes:
    access_control: '"ROLE_BRAND_ADMIN" in roles'
    read_access_control:
      ROLE_BRAND_ADMIN:
        company:
          in: "companyRepository.getSupervisedCompanyIdsByAdmin(user)"
Ivoz\Provider\Domain\Model\BrandService\BrandService:
  attributes:
    access_control: '"ROLE_BRAND_ADMIN" in roles'
    read_access_control:
      ROLE_BRAND_ADMIN:
        brand:
          eq: "user.getBrand().getId()"
Ivoz\Provider\Domain\Model\BrandUrl\BrandUrl:
  attributes:
    access_control: '"ROLE_BRAND_ADMIN" in roles'
    read_access_control:
      ROLE_BRAND_ADMIN:
        brand:
          eq: "user.getBrand().getId()"
Ivoz\Provider\Domain\Model\Company\Company:
  attributes:
    access_control: '"ROLE_COMPANY_ADMIN" in roles'
    read_access_control:
      ROLE_COMPANY_ADMIN:
        company:
          eq: "user.getCompany().getId()"
      ROLE_BRAND_ADMIN:
        brand:
          eq: "user.getBrand().getId()"
Ivoz\Provider\Domain\Model\Country\Name:
Ivoz\Provider\Domain\Model\Country\Zone:
Ivoz\Provider\Domain\Model\Country\Country:
  itemOperations:
    get: ~
  collectionOperations:
    get: ~
  attributes:
    access_control: '"ROLE_USER" in roles'
Ivoz\Provider\Domain\Model\Domain\Domain:
  itemOperations:
    get: ~
  collectionOperations:
    get: ~
  attributes:
    access_control: '"ROLE_BRAND_ADMIN" in roles'
Ivoz\Provider\Domain\Model\DdiProvider\DdiProvider:
  attributes:
    access_control: '"ROLE_BRAND_ADMIN" in roles'
    read_access_control:
      ROLE_BRAND_ADMIN:
        brand:
          eq: "user.getBrand().getId()"
Ivoz\Provider\Domain\Model\DdiProviderRegistration\DdiProviderRegistration:
  attributes:
    access_control: '"ROLE_BRAND_ADMIN" in roles'
    read_access_control:
      inherited:
        ddiProvider: 'Ivoz\Provider\Domain\Model\DdiProvider\DdiProvider'
Ivoz\Provider\Domain\Model\DdiProviderAddress\DdiProviderAddress:
    attributes:
      access_control: '"ROLE_BRAND_ADMIN" in roles'
    read_access_control:
      inherited:
        ddiProvider: 'Ivoz\Provider\Domain\Model\DdiProvider\DdiProvider'
Ivoz\Provider\Domain\Model\Feature\Feature:
  itemOperations:
    get: ~
  collectionOperations:
    get: ~
  attributes:
    access_control: '"ROLE_BRAND_ADMIN" in roles'
Ivoz\Provider\Domain\Model\FeaturesRelBrand\FeaturesRelBrand:
  attributes:
    access_control: '"ROLE_BRAND_ADMIN" in roles'
    read_access_control:
      ROLE_BRAND_ADMIN:
        brand:
          eq: "user.getBrand().getId()"
Ivoz\Provider\Domain\Model\FixedCost\FixedCost:
  attributes:
    access_control: '"ROLE_BRAND_ADMIN" in roles'
    read_access_control:
      ROLE_BRAND_ADMIN:
        brand:
          eq: "user.getBrand().getId()"


Ivoz\Provider\Domain\Model\FixedCostsRelInvoice\FixedCostsRelInvoice:
  itemOperations:
    get: ~
    delete: ~
    put:
      depth: 1
  collectionOperations:
    get:
      depth: 1
      operation_normalization_context: 'detailedCollection'
      normalization_context:
        groups: ['detailedCollection']
    post:
      depth: 1
  attributes:
    access_control: '"ROLE_BRAND_ADMIN" in roles'
    read_access_control:
      inherited:
        fixedCost: 'Ivoz\Provider\Domain\Model\FixedCost\FixedCost'


Ivoz\Provider\Domain\Model\Invoice\Invoice:
  attributes:
    access_control: '"ROLE_COMPANY_ADMIN" in roles'
    read_access_control:
      ROLE_COMPANY_ADMIN:
        company:
          eq: "user.getCompany().getId()"
      ROLE_BRAND_ADMIN:
        company:
          in: "companyRepository.getSupervisedCompanyIdsByAdmin(user)"
Ivoz\Provider\Domain\Model\InvoiceNumberSequence\InvoiceNumberSequence:
  attributes:
    access_control: '"ROLE_BRAND_ADMIN" in roles'
    read_access_control:
      ROLE_BRAND_ADMIN:
        brand:
          eq: "user.getBrand().getId()"
Ivoz\Provider\Domain\Model\InvoiceTemplate\InvoiceTemplate:
  attributes:
    access_control: '"ROLE_BRAND_ADMIN" in roles'
    read_access_control:
      ROLE_BRAND_ADMIN:
        brand:
          eq: "user.getBrand().getId()"
Ivoz\Provider\Domain\Model\Language\Language:
  itemOperations:
    get: ~
  collectionOperations:
    get: ~
  attributes:
    access_control: '"ROLE_USER" in roles'
Ivoz\Provider\Domain\Model\Language\Name:
Ivoz\Provider\Domain\Model\NotificationTemplate\NotificationTemplate:
  attributes:
    access_control: '"ROLE_BRAND_ADMIN" in roles'
    read_access_control:
      ROLE_BRAND_ADMIN:
        brand:
          eq: "user.getBrand().getId()"
Ivoz\Provider\Domain\Model\NotificationTemplateContent\NotificationTemplateContent:
  attributes:
    access_control: '"ROLE_BRAND_ADMIN" in roles'
    read_access_control:
      inherited:
        notificationTemplate: 'Ivoz\Provider\Domain\Model\NotificationTemplate\NotificationTemplate'
Ivoz\Provider\Domain\Model\Carrier\Carrier:
  attributes:
    access_control: '"ROLE_BRAND_ADMIN" in roles'
    read_access_control:
      ROLE_BRAND_ADMIN:
        brand:
          eq: "user.getBrand().getId()"
Ivoz\Provider\Domain\Model\CarrierServer\CarrierServer:
  attributes:
    access_control: '"ROLE_BRAND_ADMIN" in roles'
    read_access_control:
      ROLE_BRAND_ADMIN:
        brand:
          eq: "user.getBrand().getId()"

Ivoz\Provider\Domain\Model\RatingPlanGroup\RatingPlanGroup:
  itemOperations: []
  collectionOperations: []

Ivoz\Provider\Domain\Model\RoutingPatternGroup\RoutingPatternGroup:
  attributes:
    access_control: '"ROLE_BRAND_ADMIN" in roles'
    read_access_control:
      ROLE_BRAND_ADMIN:
        brand:
          eq: "user.getBrand().getId()"

Ivoz\Provider\Domain\Model\RoutingPatternGroupsRelPattern\RoutingPatternGroupsRelPattern:
  collectionOperations:
    get:
      depth: 1
      operation_normalization_context: 'detailedCollection'
      normalization_context:
        groups: ['detailedCollection']
    post:
      depth: 1
  attributes:
    access_control: '"ROLE_BRAND_ADMIN" in roles'
    read_access_control:
      inherited:
        routingPatternGroup: 'Ivoz\Provider\Domain\Model\RoutingPatternGroup\RoutingPatternGroup'
Ivoz\Provider\Domain\Model\RoutingPattern\Name:
Ivoz\Provider\Domain\Model\RoutingPattern\Description:
Ivoz\Provider\Domain\Model\RoutingPattern\RoutingPattern:
  attributes:
    access_control: '"ROLE_BRAND_ADMIN" in roles'
    read_access_control:
      ROLE_BRAND_ADMIN:
        brand:
          eq: "user.getBrand().getId()"
Ivoz\Provider\Domain\Model\Service\Service:
  itemOperations:
    get: ~
  collectionOperations:
    get: ~
  attributes:
    access_control: '"ROLE_BRAND_ADMIN" in roles'
Ivoz\Provider\Domain\Model\Timezone\Timezone:
  itemOperations:
    get: ~
  collectionOperations:
    get: ~
  attributes:
    access_control: '"ROLE_USER" in roles'
Ivoz\Provider\Domain\Model\TransformationRuleSet\TransformationRuleSet:
  attributes:
    access_control: '"ROLE_BRAND_ADMIN" in roles'
    read_access_control:
      ROLE_BRAND_ADMIN:
        brand:
          eq: "user.getBrand().getId()"
Ivoz\Provider\Domain\Model\TransformationRule\TransformationRule:
  attributes:
    access_control: '"ROLE_BRAND_ADMIN" in roles'
    read_access_control:
      inherited:
        transformationRuleSet: 'Ivoz\Provider\Domain\Model\TransformationRuleSet\TransformationRuleSet'
